{
  "name": "CS684: embedded and real-time systems",
  "tagline": "Using TivaC Launchpad,  Embedded and Real-Time Systems Lab, Department of Computer Science and Engineering",
  "body": "### Welcome to **CS684: Embedded Systems**\r\n\r\n## Instructor: Prof. Kavi Arya\r\n\r\nThis course is for graduate and undergraduate students of I.I.T. Bombay. This course introduces you to the concept of developing an embedded system. (ARM Cortex-M4F based TIVA C series launchpad). \r\n\r\n## Pre-requisites:\r\nEE-712 Embedded Systems (Recommended)\r\nBasic understanding of working with any microcontroller \r\n\r\n## Schedule: \r\n# Slot: 2 \r\n# Lecture Days: \r\n* Monday \t        (9:30 to 10:25)\r\n* Tuesday \t(10:35 to 11:30)\r\n* Thursday \t(11:35 to 12:30) \r\n\r\n# Lab venue and days: \r\nSIC 204 and SIC 304 Wednesday (2:00 to 5:00) \r\n\r\n## Course Outline\r\nThis course is especially for those wanting to do MTP in the area OR may be seen as a standalone course. Introduction to Embedded systems, hardware/software codesign, Embedded micro controller cores, embedded memories, Examples of embedded systems, sensors and interfacing techniques, Real-time concepts, real-time operating systems, Required RTOS services/capabilities (in contrast with traditional OS) Resource Management/scheduling paradigms: static priorities, static schedules, dynamic scheduling, best effort current best practice in scheduling (e.g. Rate Monotonic vs. static schedules), Real-world issues: blocking, unpredictability, interrupts, caching, Examples of OSs for embedded systems - RT Linux, VRTX Programming languages for embedded systems, system support for embedded systems, verification of embedded systems, selected embedded system-based applications: smart cards, process control, robotics, network appliances, etc. Software Development Methodology: Real-time UML (RoseRT), DOORS, etc Case studies, Controlling an Injection molding process, Flight simulator, digital call center handler, codec,\r\n\r\n## Lab part 1\r\n1. Introduction to the ARM® Cortex™ M4F,its Peripherals,Code Composer Studio and Energia\r\n2. Understanding Tiva Ware, Initialization, and GPIO\r\n4. Interrupts and the Timers\r\n5. PWM and Servo Motor Interfacing\r\n6. ADC and Interfacing Joystick\r\n7. Interfacing LCD (16x2)\r\n8. UART and Interfacing Sensors(LM35)\r\n9. EEPROM\r\n10. Interfacing Graphics LCD\r\n\r\n## Part 2\r\n1. Basic concepts of Operating Systems\r\n2. LED blinking using HWI and SWI\r\n3. Experiments based tasks, mutex, semaphores, and locks\r\n4. To be developed\r\n\r\n## Mini Project\r\n* Game development based on the concepts learned",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}